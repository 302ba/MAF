<!DOCTYPE HTML>
<html>
<head>
   <title>Overview</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "tmafhookmanager_overview.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#99CCFF">
  <tr valign="middle">
    <td align="left">
     <span style="font-size: 8pt">
      <b>Modular Application Framework Components</b>
     </span>
    </td>
  </tr>
  <tr valign="middle">
    <td align="left">
      <h1 class="p_Heading1"><span class="f_Heading1">Overview</span></h1>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="tmafhookmanager.htm">Previous</a>&nbsp;
     <a href="tmafhookmanager_properties.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>The TmafHookManager manages all published code with a MAF-Application. To do that it uses a Dynamic Function Table (DFT) to store, which function is in which module and how are they linked together.</p>
<p>&nbsp;</p>
<p>The DFT contains a list a Dynamic Functions (Hooks), which contain 1-n code fragments (SubHooks). Every SubHook represents published code in a module. Published code can be real code written inside a unit in a module or class information connected to a SubHook that can be created automatically by the TmafModuleController.</p>
<p>&nbsp;</p>
<p>SubHooks contain the following information :</p>
<p>&nbsp;</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table style="border:none; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<th style="vertical-align:top; width:109px; background-color:#d5eaff; padding:2px; border:solid 1px #000000;"><p><span style="font-weight: bold;">Member</span></p>
</th>
<th style="vertical-align:top; width:99px; background-color:#d5eaff; padding:2px; border:solid 1px #000000;"><p><span style="font-weight: bold;">Type</span></p>
</th>
<th style="vertical-align:top; width:597px; background-color:#d5eaff; padding:2px; border:solid 1px #000000;"><p><span style="font-weight: bold;">Description</span></p>
</th>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:109px; padding:2px; border:solid 1px #000000;"><p>HookID</p>
</td>
<td style="vertical-align:top; width:99px; padding:2px; border:solid 1px #000000;"><p>Integer</p>
</td>
<td style="vertical-align:top; width:597px; padding:2px; border:solid 1px #000000;"><p>The Hook this SubHook belongs to</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:109px; padding:2px; border:solid 1px #000000;"><p>SubHookID</p>
</td>
<td style="vertical-align:top; width:99px; padding:2px; border:solid 1px #000000;"><p>Integer</p>
</td>
<td style="vertical-align:top; width:597px; padding:2px; border:solid 1px #000000;"><p>The SubHookID which must be unique for the module, should be unique in the system</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:109px; padding:2px; border:solid 1px #000000;"><p>UniqueID</p>
</td>
<td style="vertical-align:top; width:99px; padding:2px; border:solid 1px #000000;"><p>Cardinal</p>
</td>
<td style="vertical-align:top; width:597px; padding:2px; border:solid 1px #000000;"><p>MUST be unique within the DFT, modules can reintroduce function and overwrite an existing one with the same UniqueID</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:109px; padding:2px; border:solid 1px #000000;"><p>ModuleID</p>
</td>
<td style="vertical-align:top; width:99px; padding:2px; border:solid 1px #000000;"><p>Integer</p>
</td>
<td style="vertical-align:top; width:597px; padding:2px; border:solid 1px #000000;"><p>The ModuleID where the code resides in</p>
</td>
</tr>
</table>
</div>
<p style="margin: 0px 0px 0px 24px;">&nbsp;</p>
<p>Code can be executed only by a TmafHookClient and can call a Hook (with all its SubHooks) or a specific function (UniqueID) within a Hook.</p>
<p>Therefore one can create Hooks that should be called as a whole, but also Hooks, that just collect single functions called only through their UniqueID. The latter is great to build Tool-Hooks, which contain a number of functions where the programmer is sure that they never need a second function added. It also improves the readability of the DFT in the DFT Editor, as the amount of Hooks decrease.</p>

</td></tr></table>
<hr />
   (c)opyright 2009 by Helge Lange. All Rights Reserved.
</body>
</html>
